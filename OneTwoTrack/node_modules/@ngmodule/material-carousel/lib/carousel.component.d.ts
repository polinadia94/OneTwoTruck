import { AnimationBuilder } from '@angular/animations';
import { ListKeyManager } from '@angular/cdk/a11y';
import { AfterContentInit, AfterViewInit, EventEmitter, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { ThemePalette } from '@angular/material/core';
import { MatCarousel, Orientation, SvgIconOverrides } from './carousel';
import { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';
import * as ɵngcc0 from '@angular/core';
export declare class MatCarouselComponent implements AfterContentInit, AfterViewInit, MatCarousel, OnDestroy {
    private animationBuilder;
    private renderer;
    private platformId;
    timings: string;
    svgIconOverrides: SvgIconOverrides;
    autoplay: boolean;
    interval: number;
    loop: boolean;
    hideArrows: boolean;
    hideIndicators: boolean;
    color: ThemePalette;
    maxWidth: string;
    maintainAspectRatio: boolean;
    proportion: number;
    slideHeight: string;
    slides: number;
    useKeyboard: boolean;
    useMouseWheel: boolean;
    orientation: Orientation;
    change: EventEmitter<number>;
    readonly currentIndex: number;
    readonly currentSlide: MatCarouselSlideComponent;
    slidesList: QueryList<MatCarouselSlideComponent>;
    private carouselContainer;
    private carouselList;
    listKeyManager: ListKeyManager<MatCarouselSlideComponent>;
    private _autoplay;
    private autoplay$;
    private interval$;
    private slides$;
    private _maxWidth;
    private maxWidth$;
    private _loop;
    private loop$;
    private _orientation;
    private orientation$;
    private timer$;
    private timerStop$;
    private destroy$;
    private playing;
    constructor(animationBuilder: AnimationBuilder, renderer: Renderer2, platformId: any);
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    next(): void;
    previous(): void;
    slideTo(index: number): void;
    onKeyUp(event: KeyboardEvent): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    onMouseWheel(event: MouseWheelEvent): void;
    onResize(event: Event): void;
    onPan(event: any, slideElem: HTMLElement): void;
    onPanEnd(event: any, slideElem: HTMLElement): void;
    private isOutOfBounds;
    private isVisible;
    private getOffset;
    private getTranslation;
    private getWidth;
    private goto;
    private playAnimation;
    private resetSlides;
    private resetTimer;
    private startTimer;
    private stopTimer;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatCarouselComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatCarouselComponent, "mat-carousel", never, {
    "timings": "timings";
    "hideArrows": "hideArrows";
    "hideIndicators": "hideIndicators";
    "color": "color";
    "maintainAspectRatio": "maintainAspectRatio";
    "proportion": "proportion";
    "slideHeight": "slideHeight";
    "useKeyboard": "useKeyboard";
    "useMouseWheel": "useMouseWheel";
    "autoplay": "autoplay";
    "interval": "interval";
    "loop": "loop";
    "maxWidth": "maxWidth";
    "slides": "slides";
    "orientation": "orientation";
    "svgIconOverrides": "svgIconOverrides";
}, {
    "change": "change";
}, ["slidesList"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNhcm91c2VsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBTUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFuaW1hdGlvbkJ1aWxkZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IExpc3RLZXlNYW5hZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCwgQWZ0ZXJWaWV3SW5pdCwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIFF1ZXJ5TGlzdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUaGVtZVBhbGV0dGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jb3JlJztcbmltcG9ydCB7IE1hdENhcm91c2VsLCBPcmllbnRhdGlvbiwgU3ZnSWNvbk92ZXJyaWRlcyB9IGZyb20gJy4vY2Fyb3VzZWwnO1xuaW1wb3J0IHsgTWF0Q2Fyb3VzZWxTbGlkZUNvbXBvbmVudCB9IGZyb20gJy4vY2Fyb3VzZWwtc2xpZGUvY2Fyb3VzZWwtc2xpZGUuY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1hdENhcm91c2VsQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgQWZ0ZXJWaWV3SW5pdCwgTWF0Q2Fyb3VzZWwsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBhbmltYXRpb25CdWlsZGVyO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybUlkO1xuICAgIHRpbWluZ3M6IHN0cmluZztcbiAgICBzdmdJY29uT3ZlcnJpZGVzOiBTdmdJY29uT3ZlcnJpZGVzO1xuICAgIGF1dG9wbGF5OiBib29sZWFuO1xuICAgIGludGVydmFsOiBudW1iZXI7XG4gICAgbG9vcDogYm9vbGVhbjtcbiAgICBoaWRlQXJyb3dzOiBib29sZWFuO1xuICAgIGhpZGVJbmRpY2F0b3JzOiBib29sZWFuO1xuICAgIGNvbG9yOiBUaGVtZVBhbGV0dGU7XG4gICAgbWF4V2lkdGg6IHN0cmluZztcbiAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBib29sZWFuO1xuICAgIHByb3BvcnRpb246IG51bWJlcjtcbiAgICBzbGlkZUhlaWdodDogc3RyaW5nO1xuICAgIHNsaWRlczogbnVtYmVyO1xuICAgIHVzZUtleWJvYXJkOiBib29sZWFuO1xuICAgIHVzZU1vdXNlV2hlZWw6IGJvb2xlYW47XG4gICAgb3JpZW50YXRpb246IE9yaWVudGF0aW9uO1xuICAgIGNoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgcmVhZG9ubHkgY3VycmVudEluZGV4OiBudW1iZXI7XG4gICAgcmVhZG9ubHkgY3VycmVudFNsaWRlOiBNYXRDYXJvdXNlbFNsaWRlQ29tcG9uZW50O1xuICAgIHNsaWRlc0xpc3Q6IFF1ZXJ5TGlzdDxNYXRDYXJvdXNlbFNsaWRlQ29tcG9uZW50PjtcbiAgICBwcml2YXRlIGNhcm91c2VsQ29udGFpbmVyO1xuICAgIHByaXZhdGUgY2Fyb3VzZWxMaXN0O1xuICAgIGxpc3RLZXlNYW5hZ2VyOiBMaXN0S2V5TWFuYWdlcjxNYXRDYXJvdXNlbFNsaWRlQ29tcG9uZW50PjtcbiAgICBwcml2YXRlIF9hdXRvcGxheTtcbiAgICBwcml2YXRlIGF1dG9wbGF5JDtcbiAgICBwcml2YXRlIGludGVydmFsJDtcbiAgICBwcml2YXRlIHNsaWRlcyQ7XG4gICAgcHJpdmF0ZSBfbWF4V2lkdGg7XG4gICAgcHJpdmF0ZSBtYXhXaWR0aCQ7XG4gICAgcHJpdmF0ZSBfbG9vcDtcbiAgICBwcml2YXRlIGxvb3AkO1xuICAgIHByaXZhdGUgX29yaWVudGF0aW9uO1xuICAgIHByaXZhdGUgb3JpZW50YXRpb24kO1xuICAgIHByaXZhdGUgdGltZXIkO1xuICAgIHByaXZhdGUgdGltZXJTdG9wJDtcbiAgICBwcml2YXRlIGRlc3Ryb3kkO1xuICAgIHByaXZhdGUgcGxheWluZztcbiAgICBjb25zdHJ1Y3RvcihhbmltYXRpb25CdWlsZGVyOiBBbmltYXRpb25CdWlsZGVyLCByZW5kZXJlcjogUmVuZGVyZXIyLCBwbGF0Zm9ybUlkOiBhbnkpO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmV4dCgpOiB2b2lkO1xuICAgIHByZXZpb3VzKCk6IHZvaWQ7XG4gICAgc2xpZGVUbyhpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBvbktleVVwKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBvbk1vdXNlRW50ZXIoKTogdm9pZDtcbiAgICBvbk1vdXNlTGVhdmUoKTogdm9pZDtcbiAgICBvbk1vdXNlV2hlZWwoZXZlbnQ6IE1vdXNlV2hlZWxFdmVudCk6IHZvaWQ7XG4gICAgb25SZXNpemUoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvblBhbihldmVudDogYW55LCBzbGlkZUVsZW06IEhUTUxFbGVtZW50KTogdm9pZDtcbiAgICBvblBhbkVuZChldmVudDogYW55LCBzbGlkZUVsZW06IEhUTUxFbGVtZW50KTogdm9pZDtcbiAgICBwcml2YXRlIGlzT3V0T2ZCb3VuZHM7XG4gICAgcHJpdmF0ZSBpc1Zpc2libGU7XG4gICAgcHJpdmF0ZSBnZXRPZmZzZXQ7XG4gICAgcHJpdmF0ZSBnZXRUcmFuc2xhdGlvbjtcbiAgICBwcml2YXRlIGdldFdpZHRoO1xuICAgIHByaXZhdGUgZ290bztcbiAgICBwcml2YXRlIHBsYXlBbmltYXRpb247XG4gICAgcHJpdmF0ZSByZXNldFNsaWRlcztcbiAgICBwcml2YXRlIHJlc2V0VGltZXI7XG4gICAgcHJpdmF0ZSBzdGFydFRpbWVyO1xuICAgIHByaXZhdGUgc3RvcFRpbWVyO1xufVxuIl19